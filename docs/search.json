[{"path":"index.html","id":"section","chapter":"","heading":"","text":"TFI eWorkshop  | Using Python Tell Stories Data","code":""},{"path":"index.html","id":"about-this-eworkshop","chapter":"","heading":"About this eWorkshop","text":"","code":""},{"path":"index.html","id":"abstract","chapter":"","heading":"Abstract","text":"\nData -powerful; can make break scientific theories cast far-reaching influence , example, beliefs society. pertinent example use (misuse) data handling COVID-19 pandemic. highlighted need , least, teach simple analytical visualisation skills tools gain insights data.Python friendly, extremely popular powerful computational language free. Python versatile can used simple visualisation analytical tasks even interrogate big data sets. workshop gently guide using Python visualise data make simple statistical queries. equip students powerful computational tool can readily used gain insight scientific data. Learning Python also open endless computational possibilities (e.g. machine learning, image analysis).prior programming knowledge expected, just lots enthusiasm sense humour.","code":""},{"path":"index.html","id":"workflow","chapter":"","heading":"Workflow","text":"email participants details, closer date workshop.","code":""},{"path":"index.html","id":"objectives","chapter":"","heading":"Objectives","text":"help want start programming get started.\nexpect code super-efficient; just needs work. Perfection can come later.\ncan borrow code internet least know even know .\nexpect code super-efficient; just needs work. Perfection can come later.can borrow code internet least know even know .Learn least amount code concepts can achieve common tasks related data visualisation.\nparticular, focus code related :\nbasic Python\nhandling data\nplotting.\nbasic Pythonhandling dataplotting.","code":""},{"path":"index.html","id":"supporting-institutions","chapter":"","heading":"Supporting Institutions","text":"Temasek Foundation International (TFI)National University Singapore (NUS)\nSpecial Programme Science (SPS, sps.nus.edu.sg)\nScience Communication Programme, Faculty Science\nSpecial Programme Science (SPS, sps.nus.edu.sg)Science Communication Programme, Faculty Science","code":""},{"path":"hello.html","id":"hello","chapter":"2 Hello","heading":"2 Hello","text":"","code":""},{"path":"hello.html","id":"what-topics-will-we-discuss","chapter":"2 Hello","heading":"2.1 What topics will we discuss","text":"Python Universe enormous! want share minimum necessary useful things Python (still fun). material website exhaustive, want . complete resources elsewhere use reference. Please refer section resources details.Often many ways use Python achieve result. usually share way allows . just want get started; comfortable, can explore advanced methods using Python.","code":""},{"path":"hello.html","id":"some-tips","chapter":"2 Hello","heading":"2.2 Some Tips","text":"Remember little possible!Instead good websites (notes) can access easily.Don’t try remember syntaxInstead try understand syntax structured1.Experiment! Experiment! Experiment!Playing code cost anything. , curious. Go intuition try things . Things won’t work well te start willget better.Keyboard Shortcuts2Using keyboard makes life easy efficient. Learn many can.Don’t work aloneLearning fun faster discuss clarify things colleague3.Just learn needWhen starting programming better learn basics just need solve problem.","code":""},{"path":"hello.html","id":"python","chapter":"2 Hello","heading":"2.3 Python?","text":"","code":""},{"path":"hello.html","id":"what-is-python","chapter":"2 Hello","heading":"What is Python?","text":"Python free friendly programming language. ‘brain’ Python called interpreter. newest version Python interpreter Python 3.","code":""},{"path":"hello.html","id":"how-do-i-use-python","chapter":"2 Hello","heading":"How do I use Python?","text":"Python interpreter can understand one instruction time. Therefore, usually write many instructions single file (code) ‘pass’ onto interpreter. files typically extension .py. However, Python can also used interactively using environment called Jupyter notebook.","code":""},{"path":"hello.html","id":"how-do-i-use-python-1","chapter":"2 Hello","heading":"How do I use Python?","text":"One best (easiest) ways get started Python use online environment like Colab. However, want can also install computer using Anaconda distribution.","code":""},{"path":"hello.html","id":"ways-to-access-python","chapter":"2 Hello","heading":"2.4 Ways to access Python?","text":"","code":""},{"path":"hello.html","id":"jupyter-notebooks","chapter":"2 Hello","heading":"2.4.1 Jupyter Notebooks","text":"\nFigure 2.1: Examples Jupyter Notebooks (jupyter.org)\n many ways issue commands Python interpreter. Jupyter notebook one easy (popular) environment write Python4 code. Jupyter notebook also allows combine Markdown Python document produce rich content can easily converted reports even interactive presentation slides!Jupyter notebook files extension .ipynb5.","code":""},{"path":"hello.html","id":"colab","chapter":"2 Hello","heading":"2.4.2 Colab","text":"Colab (free) platform offered Google coding Python (languages). Colab offers environment (almost) identical Jupyter notebook.advantages using Colab :Colab allow us use Python without install computers.Colab enable us share code others (just like Google document)Colab processing servers. , won’t tax computer6.Let’s see Colab can watching introductory video.","code":""},{"path":"hello.html","id":"installing-python-with-anaconda","chapter":"2 Hello","heading":"2.4.3 Installing Python with Anaconda","text":"install Python locally machine workshop. However, like Python computer recommend use Anaconda distribution called miniconda.Step 1. Visit download page Anaconda.Step 2. Download install 64-bit Python 3 distribution suitable operating system.(Windows users run Anaconda Administrator)","code":""},{"path":"hello.html","id":"updating-packages-with-anaconda","chapter":"2 Hello","heading":"2.4.3.1 Updating packages with Anaconda","text":"","code":""},{"path":"hello.html","id":"using-anaconda-navigator","chapter":"2 Hello","heading":"2.4.3.2 Using Anaconda-Navigator","text":"","code":""},{"path":"hello.html","id":"markdown","chapter":"2 Hello","heading":"2.5 Markdown","text":"","code":""},{"path":"hello.html","id":"what-is-markdown","chapter":"2 Hello","heading":"2.5.1 What is Markdown?","text":"Markdown simple, powerful language ‘word processing.’ Markdown simple efficient way write. Like \\(\\LaTeX\\) tries separate content style. can convert content Markdown (.md) files directly PDF HTML formats. Markdown can used Jupyter notebook add text. can read Wikipedia.One favorite free, cross-platform Markdown editors Typora. also web based editors (StackEdit, Dillinger, Madoko, Markdown & LaTeX Editor).","code":""},{"path":"hello.html","id":"conventions","chapter":"2 Hello","heading":"2.6 Conventions","text":"Python code shown grey box like :# used show result (output) code. appear immediately code, like :","code":"print('Code is shown in a box like this')print('Code is shown in a box like this')#> Code is shown in a box like this"},{"path":"hello.html","id":"sec:resources","chapter":"2 Hello","heading":"2.7 Resources","text":"","code":""},{"path":"hello.html","id":"jupyter-notebooks-1","chapter":"2 Hello","heading":"2.7.1 Jupyter Notebooks","text":"Take look site cool tricks optimisations notebooks.","code":""},{"path":"instructions.html","id":"instructions","chapter":"Instructions","heading":"Instructions","text":"like learnt basics Python Colab day workshop. way able use workshop time learn advanced ideas solve difficulties .come workshop, please:Watch 15 minute video ‘Whirlwind Introduction Python.’Watch 5 minute video using Colab Python.Work basic exercise.Watch 20 minute video ‘Whirlwind Introduction Python.’Work basic exercise.","code":""},{"path":"instructions.html","id":"start-communication","chapter":"Instructions","heading":"Start Communication","text":"Please use Piazza questions.","code":""},{"path":"some-python-basics.html","id":"some-python-basics","chapter":"4 Some Python Basics","heading":"4 Some Python Basics","text":"","code":""},{"path":"some-python-basics.html","id":"python-is-case-sensitive","chapter":"4 Some Python Basics","heading":"4.1 Python is Case Sensitive","text":"work..","code":"print('Hello World')#> Hello WorldPrint('Hello World')#> Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name 'Print' is not defined\n#> \n#> Detailed traceback:\n#>   File \"<string>\", line 1, in <module>"},{"path":"some-python-basics.html","id":"x-is-a-variable.-x-is-an-english-letter","chapter":"4 Some Python Basics","heading":"4.2 x is a variable. ‘x’ is an English letter","text":"asking Python print English letter ‘x.’asking Python print value related variable x.","code":"print('x')#> xx = 10\nprint(x)#> 10"},{"path":"some-python-basics.html","id":"we-can-use-flettersx-to-combine-english-with-variables","chapter":"4 Some Python Basics","heading":"4.3 We can use f’letters{x}’ to combine English with variables","text":"","code":"x = 10\ntext = 'My age is {x}.'\nprint(text)#> My age is {x}."},{"path":"some-python-basics.html","id":"be-mindful-of-spacesindentation-at-the-start-of-a-line","chapter":"4 Some Python Basics","heading":"4.4 Be mindful of spaces(indentation) at the start of a line","text":"work..","code":"x = 10\ny = 20x = 10\n  y = 20"},{"path":"some-python-basics.html","id":"python-has-functions","chapter":"4 Some Python Basics","heading":"4.5 Python has functions","text":"print() good example function Python. function work needs something (call argument) print. need supply argument within function’s brackets ().typical function usually can accept additional arguments things. example print() function allows us add something end.can find function looking help file follows","code":"print('Hello World')#> Hello Worldprint('Hello World', end = '******')#> Hello World******print?print(...)\n    print(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\n    Prints the values to a stream, or to sys.stdout by default.\n    Optional keyword arguments:\n    file:  a file-like object (stream); defaults to the current sys.stdout.\n    sep:   string inserted between values, default a space.\n    end:   string appended after the last value, default a newline.\n    flush: whether to forcibly flush the stream."},{"path":"some-python-basics.html","id":"brackets-in-python","chapter":"4 Some Python Basics","heading":"4.6 Brackets in Python","text":"","code":"print('Hello World')#> Hello World"},{"path":"some-python-basics.html","id":"python-has-many-many-cool-packages","chapter":"4 Some Python Basics","heading":"4.7 Python has many (many) cool packages","text":"Example: math.sqrt() means sqrt() belonging math","code":"print('Hello World')#> Hello World"},{"path":"some-python-basics.html","id":"you-can-think-of-the-dot.-as-indicating-ownership","chapter":"4 Some Python Basics","heading":"4.8 You can think of the dot(‘.’) as indicating ownership","text":"","code":"print('Hello World')#> Hello World"},{"path":"some-python-basics.html","id":"we-can-store-data-using-lists","chapter":"4 Some Python Basics","heading":"4.9 We can store data using lists","text":"","code":""},{"path":"some-python-basics.html","id":"we-can-store-data-using-dictionaries","chapter":"4 Some Python Basics","heading":"4.10 We can store data using dictionaries","text":"","code":""},{"path":"some-python-basics.html","id":"we-can-store-data-using-numpy-arrays","chapter":"4 Some Python Basics","heading":"4.11 We can store data using numpy arrays","text":"","code":""},{"path":"some-python-basics.html","id":"python-sometimes-act-like-a-prima-donna-when-you-make-an-error","chapter":"4 Some Python Basics","heading":"4.12 Python sometimes act like a prima donna when you make an error","text":"","code":"print('Hello World')#> Hello World"},{"path":"python-basics-exercises.html","id":"python-basics-exercises","chapter":"5 Python Basics : Exercises","heading":"5 Python Basics : Exercises","text":"","code":""},{"path":"some-pandas-basics.html","id":"some-pandas-basics","chapter":"6 Some Pandas Basics","heading":"6 Some Pandas Basics","text":"","code":""},{"path":"some-pandas-basics.html","id":"python-is-case-sensitive-1","chapter":"6 Some Pandas Basics","heading":"6.1 Python is Case Sensitive","text":"work..","code":"print('Hello World')#> Hello WorldPrint('Hello World')#> Error in py_call_impl(callable, dots$args, dots$keywords): NameError: name 'Print' is not defined\n#> \n#> Detailed traceback:\n#>   File \"<string>\", line 1, in <module>"},{"path":"some-pandas-basics.html","id":"x-is-a-variable.-x-is-an-english-letter-1","chapter":"6 Some Pandas Basics","heading":"6.2 x is a variable. ‘x’ is an English letter","text":"asking Python print English letter ‘x.’asking Python print value related variable x.","code":"print('x')#> xx = 10\nprint(x)#> 10"},{"path":"some-pandas-basics.html","id":"we-can-use-flettersx-to-combine-english-with-variables-1","chapter":"6 Some Pandas Basics","heading":"6.3 We can use f’letters{x}’ to combine English with variables","text":"","code":"x = 10\ntext = 'My age is {x}.'\nprint(text)#> My age is {x}."},{"path":"some-pandas-basics.html","id":"be-mindful-of-spacesindentation-at-the-start-of-a-line-1","chapter":"6 Some Pandas Basics","heading":"6.4 Be mindful of spaces(indentation) at the start of a line","text":"work..","code":"x = 10\ny = 20x = 10\n  y = 20"},{"path":"some-pandas-basics.html","id":"python-has-functions-1","chapter":"6 Some Pandas Basics","heading":"6.5 Python has functions","text":"print() good example function Python. function work needs something (call argument) print. need supply argument within function’s brackets ().typical function usually can accept additional arguments things. example print() function allows us add something end.can find function looking help file follows","code":"print('Hello World')#> Hello Worldprint('Hello World', end = '******')#> Hello World******print?print(...)\n    print(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\n    Prints the values to a stream, or to sys.stdout by default.\n    Optional keyword arguments:\n    file:  a file-like object (stream); defaults to the current sys.stdout.\n    sep:   string inserted between values, default a space.\n    end:   string appended after the last value, default a newline.\n    flush: whether to forcibly flush the stream."},{"path":"some-pandas-basics.html","id":"brackets-in-python-1","chapter":"6 Some Pandas Basics","heading":"6.6 Brackets in Python","text":"","code":"print('Hello World')#> Hello World"},{"path":"some-pandas-basics.html","id":"python-has-many-many-cool-packages-1","chapter":"6 Some Pandas Basics","heading":"6.7 Python has many (many) cool packages","text":"Example: math.sqrt() means sqrt() belonging math","code":"print('Hello World')#> Hello World"},{"path":"some-pandas-basics.html","id":"you-can-think-of-the-dot.-as-indicating-ownership-1","chapter":"6 Some Pandas Basics","heading":"6.8 You can think of the dot(‘.’) as indicating ownership","text":"","code":"print('Hello World')#> Hello World"},{"path":"some-pandas-basics.html","id":"we-can-store-data-using-lists-1","chapter":"6 Some Pandas Basics","heading":"6.9 We can store data using lists","text":"","code":""},{"path":"some-pandas-basics.html","id":"we-can-store-data-using-dictionaries-1","chapter":"6 Some Pandas Basics","heading":"6.10 We can store data using dictionaries","text":"","code":""},{"path":"some-pandas-basics.html","id":"we-can-store-data-using-numpy-arrays-1","chapter":"6 Some Pandas Basics","heading":"6.11 We can store data using numpy arrays","text":"","code":""},{"path":"some-pandas-basics.html","id":"python-sometimes-act-like-a-prima-donna-when-you-make-an-error-1","chapter":"6 Some Pandas Basics","heading":"6.12 Python sometimes act like a prima donna when you make an error","text":"","code":"print('Hello World')#> Hello World"},{"path":"python-pandas-exercises.html","id":"python-pandas-exercises","chapter":"7 Python Pandas : Exercises","heading":"7 Python Pandas : Exercises","text":"","code":""},{"path":"instructions-1.html","id":"instructions-1","chapter":"Instructions","heading":"Instructions","text":"like learnt basics Python Colab day workshop. way able use workshop time learn advanced ideas solve difficulties .come workshop, please:Watch 15 minute video ‘Whirlwind Introduction Python.’Watch 5 minute video using Colab Python.Work basic exercise.Watch 20 minute video ‘Whirlwind Introduction Python.’Work basic exercise.","code":""},{"path":"instructions-1.html","id":"start-communication-1","chapter":"Instructions","heading":"Start Communication","text":"Please use Piazza questions.","code":""},{"path":"basic-plotting-with-pandas.html","id":"basic-plotting-with-pandas","chapter":"9 Basic Plotting with Pandas","heading":"9 Basic Plotting with Pandas","text":"","code":""},{"path":"basic-plotting-with-pandas.html","id":"example-2-a-simple-plot","chapter":"9 Basic Plotting with Pandas","heading":"Example 2 |  A Simple Plot","text":"","code":""},{"path":"basic-plotting-with-pandas.html","id":"result","chapter":"9 Basic Plotting with Pandas","heading":"Result","text":"","code":""},{"path":"basic-plotting-with-pandas.html","id":"code","chapter":"9 Basic Plotting with Pandas","heading":"Code","text":"can scatter (without error bars) using scatter (commented ).fmt short ‘format string.’ decides shape data point.\\(…\\) allows us use (limited set ) LaTeX commands!","code":"from matplotlib import pyplot as plt\n\n# Some data for plotting\nx = [0, 1, 2, 3, 4, 5]\ny_1 = [0, 2, 4, 6, 8, 10]\ny_2 = [0, 4, 8, 12, 16, 20]\nerr = [0.0, 0.5, 1.0, 1.5, 2.0, 2.5]\n\n# Lets start plotting\nplt.figure(figsize=(5, 5))\nplt.plot(x, y_1, color='red', linestyle='dashed', label='$Y_1$ values')\nplt.errorbar(x, y_2, yerr=err, color='black', fmt='o', label='$Y_2$ values')\n\nplt.xlabel('x-values')\nplt.ylabel('y-values')\nplt.title('X vs Y')\nplt.grid(alpha=.25)\nplt.legend(loc='upper left')\nplt.show()"},{"path":"basic-plotting-with-pandas.html","id":"gggg","chapter":"9 Basic Plotting with Pandas","heading":"gggg","text":"","code":""},{"path":"basic-plotting-with-pandas.html","id":"ha","chapter":"9 Basic Plotting with Pandas","heading":"ha","text":"","code":""},{"path":"basic-plotting-with-pandas.html","id":"hahh","chapter":"9 Basic Plotting with Pandas","heading":"hahh","text":"","code":""},{"path":"using-pandas-to-explore-data.html","id":"using-pandas-to-explore-data","chapter":"10 Using Pandas to Explore Data","heading":"10 Using Pandas to Explore Data","text":"","code":""},{"path":"using-pandas-to-explore-data.html","id":"barcharts","chapter":"10 Using Pandas to Explore Data","heading":"10.1 Barcharts","text":"","code":""},{"path":"using-pandas-to-explore-data.html","id":"example-2-barcharts-with-error-bars","chapter":"10 Using Pandas to Explore Data","heading":"Example 2 |  Barcharts with error bars","text":"","code":""},{"path":"using-pandas-to-explore-data.html","id":"result-1","chapter":"10 Using Pandas to Explore Data","heading":"Result","text":"Nothing yet.","code":""},{"path":"using-pandas-to-explore-data.html","id":"code-1","chapter":"10 Using Pandas to Explore Data","heading":"Code","text":"df.agg function applies various functions data set.yerr df.plot applies error bars bar chart.","code":"# Import relevant packages\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nplt.cla()\nplt.subplots(figsize = (10,7))\n\n# Reading in the dataset as df\ndf = pd.read_csv(\"https://raw.githubusercontent.com/darren1998s/darren1998s.github.io/main/iris.csv\")\n\n# Creating a function to calculate standard error\ndef se(data):\n    return np.std(data) / np.sqrt(data.count())\n\n# Grouping the data set of \"Petal.Length\" by Species\ngrouped_species = df.groupby(\"Species\")['Petal.Length']\n\n# Applying functions np.mean() and se() to our grouped dataset\nnew_df = grouped_species.agg([np.mean, se])\n\nnew_df.plot(kind = 'bar', yerr = 'se',capsize=10, rot=0)\n\n# Don't forget to add the labels for clarity!\nplt.ylabel('Average Petal Length', fontsize = 10)\nplt.xlabel('Species', fontsize = 10)\nplt.title('Average Petal Length vs Species', fontsize = 20)\nplt.tight_layout()\nplt.show()"},{"path":"using-pandas-to-explore-data.html","id":"histograms","chapter":"10 Using Pandas to Explore Data","heading":"10.2 Histograms","text":"","code":""},{"path":"using-pandas-to-explore-data.html","id":"example-3-histograms-with-grouping","chapter":"10 Using Pandas to Explore Data","heading":"Example 3 |  Histograms with Grouping","text":"","code":""},{"path":"using-pandas-to-explore-data.html","id":"result-no-group","chapter":"10 Using Pandas to Explore Data","heading":"Result (No Group)","text":"Nothing yet.","code":""},{"path":"using-pandas-to-explore-data.html","id":"code-no-group","chapter":"10 Using Pandas to Explore Data","heading":"Code (No Group)","text":"Note use kind = hist generate histograms.","code":"# Import relevant packages\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nplt.cla()\nplt.subplots(figsize = (10,7))\n\n# Reading in the dataset as df\ndf = pd.read_csv(\"https://raw.githubusercontent.com/darren1998s/darren1998s.github.io/main/iris.csv\")\n\ndf['Petal.Length'].plot(kind='hist')\n\n\n# Label your axis\nplt.ylabel('Frequency', fontsize = 10)\nplt.xlabel('Petal Length', fontsize = 10)\nplt.title('Frequency of Petal Length', fontsize = 20)\nplt.tight_layout()\nplt.legend()\nplt.show()"},{"path":"using-pandas-to-explore-data.html","id":"result-grouped","chapter":"10 Using Pandas to Explore Data","heading":"Result (Grouped)","text":"Nothing yet.","code":""},{"path":"using-pandas-to-explore-data.html","id":"code-grouped","chapter":"10 Using Pandas to Explore Data","heading":"Code (Grouped)","text":"Note use alpha = 0.5 generate semi-transparent histograms.help get messages across!","code":"# Import relevant packages\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nplt.cla()\nplt.subplots(figsize = (10,7))\n\n# Reading in the dataset as df\ndf = pd.read_csv(\"https://raw.githubusercontent.com/darren1998s/darren1998s.github.io/main/iris.csv\")\n\ngrouped_species = df.groupby(\"Species\")['Petal.Length']\ngrouped_species.plot(kind='hist', alpha = 0.5)\n\n\n# Label your axis\nplt.ylabel('Frequency', fontsize = 10)\nplt.xlabel('Petal Length', fontsize = 10)\nplt.title('Frequency of Petal Length grouped by Species', fontsize = 20)\nplt.tight_layout()\nplt.legend()\nplt.show()"},{"path":"using-pandas-to-explore-data.html","id":"scatterplots","chapter":"10 Using Pandas to Explore Data","heading":"10.3 Scatterplots","text":"","code":""},{"path":"using-pandas-to-explore-data.html","id":"example-4-grouped-scatterplots","chapter":"10 Using Pandas to Explore Data","heading":"Example 4 |  Grouped Scatterplots","text":"","code":""},{"path":"using-pandas-to-explore-data.html","id":"result-no-group-1","chapter":"10 Using Pandas to Explore Data","heading":"Result (No Group)","text":"Nothing yet.","code":""},{"path":"using-pandas-to-explore-data.html","id":"code-no-group-1","chapter":"10 Using Pandas to Explore Data","heading":"Code (No Group)","text":"Recall use loops ax plotting matplotlib.","code":"# Import relevant packages\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nplt.cla()\nplt.subplots(figsize = (10,7))\n\n# Reading in the dataset as df\ndf = pd.read_csv(\"https://raw.githubusercontent.com/darren1998s/darren1998s.github.io/main/iris.csv\")\n\n\ndf.plot(\"Petal.Width\", 'Petal.Length', kind='scatter')\n\n# Label your axis\nplt.ylabel('Petal Length', fontsize = 10)\nplt.xlabel('Petal Width', fontsize = 10)\nplt.title('Length vs Width of Petals', fontsize = 20)\nplt.tight_layout()\nplt.legend()\nplt.show()"},{"path":"using-pandas-to-explore-data.html","id":"result-grouped-1","chapter":"10 Using Pandas to Explore Data","heading":"Result (Grouped)","text":"Nothing yet.","code":""},{"path":"using-pandas-to-explore-data.html","id":"code-grouped-1","chapter":"10 Using Pandas to Explore Data","heading":"Code (Grouped)","text":"Recall use loops ax plotting matplotlib.","code":"# Import relevant packages\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nplt.cla()\nplt.subplots(figsize = (10,7))\n\n# Reading in the dataset as df\ndf = pd.read_csv(\"https://raw.githubusercontent.com/darren1998s/darren1998s.github.io/main/iris.csv\")\n\ngrouped_species = df.groupby(\"Species\")\n\n# Calling plt.subplots().\nfig, ax = plt.subplots()\n\nfor name, species in grouped_species:\n    ax.scatter(species[\"Petal.Width\"], species[\"Petal.Length\"], label=name)\n\n\n# Label your axis\nplt.ylabel('Petal Length', fontsize = 10)\nplt.xlabel('Petal Width', fontsize = 10)\nplt.title('Length vs Width of Petals grouped by Species', fontsize = 20)\nplt.tight_layout()\nplt.legend()\nplt.show()"},{"path":"using-pandas-to-explore-data.html","id":"boxplots","chapter":"10 Using Pandas to Explore Data","heading":"10.4 Boxplots","text":"","code":""},{"path":"using-pandas-to-explore-data.html","id":"example-5-boxplots","chapter":"10 Using Pandas to Explore Data","heading":"Example 5 |  Boxplots","text":"","code":""},{"path":"using-pandas-to-explore-data.html","id":"result-2","chapter":"10 Using Pandas to Explore Data","heading":"Result","text":"Nothing yet.","code":""},{"path":"using-pandas-to-explore-data.html","id":"code-2","chapter":"10 Using Pandas to Explore Data","heading":"Code","text":"Note use df.boxplot boxplot instead df.plot.purposes plt.suptitle('') used remove secondary title boxplot.","code":"# Import relevant packages\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nplt.cla()\nplt.subplots(figsize = (10,7))\n\n# Reading in the dataset as df\ndf = pd.read_csv(\"https://raw.githubusercontent.com/darren1998s/darren1998s.github.io/main/iris.csv\")\n\n#Plotting boxplot\ndf.boxplot('Petal.Length', by='Species')\n\n# Don't forget to add the labels for clarity!\nplt.suptitle('')\nplt.title('Average Petal Length vs Species', fontsize = 20)\nplt.ylabel('Petal Length', fontsize = 10)\nplt.xlabel('Species', fontsize = 10)\nplt.tight_layout()\nplt.show()"},{"path":"using-pandas-to-explore-covid-19-data.html","id":"using-pandas-to-explore-covid-19-data","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"11 Using Pandas to Explore COVID-19 Data","text":"","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"plans-for-this-section","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"11.1 Plans for this section","text":"previous two sections, introduced basics plotting using matplotlib generating exploratory analysis & visualisations using pandas. section, going put skills practice explore COVID19 dataset GitHub (https://github.com/datasets/covid-19) maintained Johns Hopkins University.","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"housekeeping","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"11.2 Housekeeping","text":"always good get rough idea dataset, right start.","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"exercise-2-what-are-we-dealing-with","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Exercise 2 |  What are we dealing with?","text":"","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"tasks","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Tasks","text":"Load data https://raw.githubusercontent.com/datasets/covid-19/main/data/countries-aggregated.csvWhat shape data? .e. many rows columns ?missing numbers?column names?","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"solution","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Solution","text":"","code":"data_url = 'https://raw.githubusercontent.com/datasets/covid-19/main/data/countries-aggregated.csv'\ndf = pd.read_csv(data_url)\n\ndf.shape#> (113880, 5)df.columns#> Index(['Date', 'Country', 'Confirmed', 'Recovered', 'Deaths'], dtype='object')df.head()#>          Date      Country  Confirmed  Recovered  Deaths\n#> 0  2020-01-22  Afghanistan          0          0       0\n#> 1  2020-01-23  Afghanistan          0          0       0\n#> 2  2020-01-24  Afghanistan          0          0       0\n#> 3  2020-01-25  Afghanistan          0          0       0\n#> 4  2020-01-26  Afghanistan          0          0       0df.describe()#>           Confirmed     Recovered         Deaths\n#> count  1.138800e+05  1.138800e+05  113880.000000\n#> mean   3.807556e+05  2.062825e+05    8892.648244\n#> std    2.047039e+06  1.155713e+06   40526.301052\n#> min    0.000000e+00  0.000000e+00       0.000000\n#> 25%    4.340000e+02  2.800000e+01       6.000000\n#> 50%    9.642500e+03  3.887000e+03     154.000000\n#> 75%    1.202160e+05  6.183175e+04    2158.250000\n#> max    3.870725e+07  3.097475e+07  636720.000000df.info()#> <class 'pandas.core.frame.DataFrame'>\n#> RangeIndex: 113880 entries, 0 to 113879\n#> Data columns (total 5 columns):\n#>  #   Column     Non-Null Count   Dtype \n#> ---  ------     --------------   ----- \n#>  0   Date       113880 non-null  object\n#>  1   Country    113880 non-null  object\n#>  2   Confirmed  113880 non-null  int64 \n#>  3   Recovered  113880 non-null  int64 \n#>  4   Deaths     113880 non-null  int64 \n#> dtypes: int64(3), object(2)\n#> memory usage: 4.3+ MB"},{"path":"using-pandas-to-explore-covid-19-data.html","id":"exercise-3-drop-those-unnecessary-columns","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Exercise 3 |  Drop those unnecessary columns?","text":"","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"tasks-1","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Tasks","text":"Assuming interested Number Deaths Number Confirmed cases.columns dataset.Drop unnecessary columns.","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"solution-1","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Solution","text":"solution specifies columns drop.","code":"df_dropped = df.drop(columns = 'Recovered')\ndf_dropped.head()#>          Date      Country  Confirmed  Deaths\n#> 0  2020-01-22  Afghanistan          0       0\n#> 1  2020-01-23  Afghanistan          0       0\n#> 2  2020-01-24  Afghanistan          0       0\n#> 3  2020-01-25  Afghanistan          0       0\n#> 4  2020-01-26  Afghanistan          0       0"},{"path":"using-pandas-to-explore-covid-19-data.html","id":"another-solution","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Another Solution","text":"solution specifies columns keep.","code":"# We want date, Country, Confirmed and Deaths\ndf_keep = df[[\"Date\", \"Country\", \"Confirmed\", \"Deaths\"]]\ndf_keep.head()#>          Date      Country  Confirmed  Deaths\n#> 0  2020-01-22  Afghanistan          0       0\n#> 1  2020-01-23  Afghanistan          0       0\n#> 2  2020-01-24  Afghanistan          0       0\n#> 3  2020-01-25  Afghanistan          0       0\n#> 4  2020-01-26  Afghanistan          0       0"},{"path":"using-pandas-to-explore-covid-19-data.html","id":"exercise-4-subset-to-asean-countries-only","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Exercise 4 |  Subset to ASEAN countries only","text":"","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"tasks-2","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Tasks","text":"dataframe huge many countries!Find way subset dataframe contain ASEAN countries. list containing ASEAN countries provided .Find way subset dataframe contain ASEAN countries. list containing ASEAN countries provided .ASEAN_countries_list = ['Brunei', 'Cambodia', 'Indonesia', 'Laos', 'Malaysia', 'Burma', 'Philippines', 'Singapore', 'Vietnam']ASEAN_countries_list = ['Brunei', 'Cambodia', 'Indonesia', 'Laos', 'Malaysia', 'Burma', 'Philippines', 'Singapore', 'Vietnam']Convert dates Date datetime using pd.to_datetime.Convert dates Date datetime using pd.to_datetime.","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"solution-2","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Solution","text":"","code":"ASEAN_countries_list = ['Brunei', 'Cambodia', 'Indonesia', 'Laos', 'Malaysia', 'Burma', 'Philippines', 'Singapore', 'Vietnam']\n\nasean_df = df_dropped[df_dropped['Country'].isin(ASEAN_countries_list)]\n\nasean_df.loc[:,'Date'] = pd.to_datetime(asean_df['Date'])#> D:\\minconda\\lib\\site-packages\\pandas\\core\\indexing.py:1773: SettingWithCopyWarning: \n#> A value is trying to be set on a copy of a slice from a DataFrame.\n#> Try using .loc[row_indexer,col_indexer] = value instead\n#> \n#> See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n#>   self._setitem_single_column(ilocs[0], value, pi)asean_df.head()#>             Date Country  Confirmed  Deaths\n#> 14016 2020-01-22  Brunei          0       0\n#> 14017 2020-01-23  Brunei          0       0\n#> 14018 2020-01-24  Brunei          0       0\n#> 14019 2020-01-25  Brunei          0       0\n#> 14020 2020-01-26  Brunei          0       0"},{"path":"using-pandas-to-explore-covid-19-data.html","id":"exploration-of-covid19-dataset-bar-chart","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"11.3 Exploration of COVID19 dataset: Bar Chart","text":"","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"exercise-5-plotting-the-total-deaths-in-each-country","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Exercise 5 |  Plotting the Total Deaths in each country","text":"","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"tasks-3","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Tasks","text":"Subset dataset contains latest date country.Subset dataset contains latest date country.Using either pandas matplotlib , plot total number deaths country.Using either pandas matplotlib , plot total number deaths country.better way represent plot?\nHint: Maybe make barchart descending!better way represent plot?\nHint: Maybe make barchart descending!","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"solution-3","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Solution","text":"","code":"plt.cla()\nplt.subplots(figsize = (10,7))#> (<Figure size 1000x700 with 1 Axes>, <AxesSubplot:>)latest_date = max(asean_df['Date'])\nasean_df_latest = asean_df[asean_df['Date'] == latest_date]\nasean_df_latest.set_index('Country', inplace = True)\n\n\nasean_df_latest['Deaths'].plot(kind = 'barh').set_xlabel('Total Deaths')#> Text(0.5, 0, 'Total Deaths')plt.tight_layout()\nplt.show()"},{"path":"using-pandas-to-explore-covid-19-data.html","id":"solution-better-way","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Solution Better Way","text":"can tell, really clean. better way present plot sort countries descending order deaths!","code":"plt.cla()\nplt.subplots(figsize = (10,7))#> (<Figure size 1000x700 with 1 Axes>, <AxesSubplot:>)latest_date = max(asean_df['Date'])\nasean_df_latest = asean_df[asean_df['Date'] == latest_date]\nasean_df_latest.set_index('Country', inplace = True)\nasean_df_latest = asean_df_latest.sort_values(by = 'Deaths', ascending=True)\n\nasean_df_latest['Deaths'].plot(kind = 'barh').set_xlabel('Total Deaths')#> Text(0.5, 0, 'Total Deaths')plt.tight_layout()\nplt.show()"},{"path":"using-pandas-to-explore-covid-19-data.html","id":"exploration-of-covid19-dataset-time-series","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"11.4 Exploration of COVID19 dataset: Time-Series","text":"","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"exercise-6-total-confirmed-cases-in-each-country-over-time","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Exercise 6 |  Total Confirmed Cases in each country over time","text":"","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"tasks-4","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Tasks","text":"Using dataframe containing DATES ASEAN countries :Plot total number confirmed cases dates.Plot total number confirmed cases dates.Ensure country colour.Ensure country colour.Enable legendEnable legend","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"solution-4","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Solution","text":"","code":"# asean_df is the df of choice\n\nplt.cla()\nfig, ax = plt.subplots(figsize = (10,5))\n\n#Iterate through our countries so we can plot automatically plot them!\nfor country in ASEAN_countries_list:\n    asean_df[asean_df['Country'] == country].plot('Date','Confirmed',ax=ax, label = country)#> <AxesSubplot:xlabel='Date'>\n#> <AxesSubplot:xlabel='Date'>\n#> <AxesSubplot:xlabel='Date'>\n#> <AxesSubplot:xlabel='Date'>\n#> <AxesSubplot:xlabel='Date'>\n#> <AxesSubplot:xlabel='Date'>\n#> <AxesSubplot:xlabel='Date'>\n#> <AxesSubplot:xlabel='Date'>\n#> <AxesSubplot:xlabel='Date'>plt.legend()#> <matplotlib.legend.Legend object at 0x0000000061D318B0>plt.xlabel('Number of Confirmed Cases', fontsize = 15)#> Text(0.5, 0, 'Number of Confirmed Cases')plt.title('Number of Confirmed Cases over time in ASEAN countries', fontsize = 20)#> Text(0.5, 1.0, 'Number of Confirmed Cases over time in ASEAN countries')plt.show()"},{"path":"using-pandas-to-explore-covid-19-data.html","id":"exploration-of-covid19-dataset-time-series-daily-cases","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"11.5 Exploration of COVID19 dataset: Time-Series Daily Cases","text":"","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"exercise-7-daily-confirmed-cases-in-each-country-over-time","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Exercise 7 |  Daily Confirmed Cases in each country over time","text":"","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"tasks-5","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Tasks","text":"Using dataframe containing DATES ASEAN countries :Find daily cases country using pd.diff().Find daily cases country using pd.diff().Plot daily number confirmed cases dates.Plot daily number confirmed cases dates.Ensure country colour.Ensure country colour.Enable legendEnable legend","code":""},{"path":"using-pandas-to-explore-covid-19-data.html","id":"solution-5","chapter":"11 Using Pandas to Explore COVID-19 Data","heading":"Solution","text":"","code":"# asean_df is the df of choice\n\n# I actually don't know...."},{"path":"core-visualisation-principles.html","id":"core-visualisation-principles","chapter":"12 Core Visualisation Principles","heading":"12 Core Visualisation Principles","text":"","code":""}]
