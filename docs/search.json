[{"path":"index.html","id":"section","chapter":"","heading":"","text":"TFI eWorkshop  | Using Python Tell Stories Data","code":""},{"path":"index.html","id":"about-this-eworkshop","chapter":"","heading":"About this eWorkshop","text":"","code":""},{"path":"index.html","id":"abstract","chapter":"","heading":"Abstract","text":"\nData -powerful; can make break scientific theories cast far-reaching influence , example, beliefs society. pertinent example use (misuse) data handling COVID-19 pandemic. highlighted need , least, teach simple analytical visualisation skills tools gain insights data.Python friendly, extremely popular powerful computational language free. Python versatile can used simple visualisation analytical tasks even interrogate big data sets. workshop gently guide using Python visualise data make simple statistical queries. equip students powerful computational tool can readily used gain insight scientific data. Learning Python also open endless computational possibilities (e.g. machine learning, image analysis).prior programming knowledge expected, just lots enthusiasm sense humour.","code":""},{"path":"index.html","id":"workflow","chapter":"","heading":"Workflow","text":"email participants details, closer date workshop.","code":""},{"path":"index.html","id":"objectives","chapter":"","heading":"Objectives","text":"help want start programming get started.\nexpect code super-efficient; just needs work. Perfection can come later.\ncan borrow code internet least know even know .\nexpect code super-efficient; just needs work. Perfection can come later.can borrow code internet least know even know .Learn least amount code concepts can achieve common tasks related data visualisation.\nparticular, focus code related :\nbasic Python\nhandling data\nplotting.\nbasic Pythonhandling dataplotting.","code":""},{"path":"index.html","id":"supporting-institutions","chapter":"","heading":"Supporting Institutions","text":"Temasek Foundation International (TFI)National University Singapore (NUS)\nSpecial Programme Science (SPS, sps.nus.edu.sg)\nScience Communication Programme, Faculty Science\nSpecial Programme Science (SPS, sps.nus.edu.sg)Science Communication Programme, Faculty Science","code":""},{"path":"hello.html","id":"hello","chapter":"2 Hello","heading":"2 Hello","text":"","code":""},{"path":"hello.html","id":"what-topics-will-we-discuss","chapter":"2 Hello","heading":"2.1 What topics will we discuss","text":"Python Universe enormous! want share minimum necessary useful things Python (still fun). material website exhaustive, want . complete resources elsewhere use reference. Please refer section resources details.Often many ways use Python achieve result. usually share way allows . just want get started; comfortable, can explore advanced methods using Python.","code":""},{"path":"hello.html","id":"some-tips","chapter":"2 Hello","heading":"2.2 Some Tips","text":"Remember little possible!Instead good websites (notes) can access easily.Don’t try remember syntaxInstead try understand syntax structured1.Experiment! Experiment! Experiment!Playing code cost anything. , curious. Go intuition try things . Things won’t work well te start willget better.Keyboard Shortcuts2Using keyboard makes life easy efficient. Learn many can.Don’t work aloneLearning fun faster discuss clarify things colleague3.Just learn needWhen starting programming better learn basics just need solve problem.","code":""},{"path":"hello.html","id":"python","chapter":"2 Hello","heading":"2.3 Python?","text":"","code":""},{"path":"hello.html","id":"section-1","chapter":"2 Hello","heading":"","text":"","code":""},{"path":"hello.html","id":"what-is-python","chapter":"2 Hello","heading":"What is Python?","text":"Python free friendly programming language. ‘brain’ Python called interpreter. newest version Python interpreter Python 3.","code":""},{"path":"hello.html","id":"how-do-i-use-python","chapter":"2 Hello","heading":"How do I use Python?","text":"Python interpreter can understand one instruction time. Therefore, usually write many instructions single file (code) ‘pass’ onto interpreter. files typically extension .py. However, Python can also used interactively using environment called Jupyter notebook.","code":""},{"path":"hello.html","id":"how-do-i-use-python-1","chapter":"2 Hello","heading":"How do I use Python?","text":"One best (easiest) ways get started Python use online environment like Colab. However, want can also install computer using Anaconda distribution installing locally machine without Anaconda!","code":""},{"path":"hello.html","id":"ways-to-access-python","chapter":"2 Hello","heading":"2.4 Ways to access Python?","text":"","code":""},{"path":"hello.html","id":"section-2","chapter":"2 Hello","heading":"","text":"","code":""},{"path":"hello.html","id":"jupyter-notebooks","chapter":"2 Hello","heading":"Jupyter Notebooks","text":"\nFigure 2.1: Examples Jupyter Notebooks (jupyter.org)\n many ways issue commands Python interpreter. Jupyter notebook one easy (popular) environment write Python4 code. Jupyter notebook also allows combine Markdown Python document produce rich content can easily converted reports even interactive presentation slides!Jupyter notebook files extension .ipynb5.","code":""},{"path":"hello.html","id":"raw-python","chapter":"2 Hello","heading":"Raw Python","text":"\nFigure 2.2: Example Code Editor Sublime Text.\n Alternatively, want something simple, can just install Python (see section ) use various code editors run python code. Python files extension .py!Pyhton editors commonly used include (limited ) Sublime Text, Spyder, Visual Studio Code, Atom.","code":""},{"path":"hello.html","id":"colab","chapter":"2 Hello","heading":"Colab","text":"\nFigure 2.3: Example Colab notebook.\nColab (free) platform offered Google coding Python (languages). Colab offers environment (almost) identical Jupyter notebook.advantages using Colab :Colab allow us use Python without install computers.Colab enable us share code others (just like Google document)Colab processing servers. , won’t tax computer6.","code":""},{"path":"hello.html","id":"installing-python","chapter":"2 Hello","heading":"2.4.1 Installing Python","text":"","code":""},{"path":"hello.html","id":"section-3","chapter":"2 Hello","heading":"","text":"","code":""},{"path":"hello.html","id":"with-anaconda","chapter":"2 Hello","heading":"With Anaconda","text":"install Python locally machine workshop. However, like Python computer recommend use Anaconda distribution called miniconda.Step 1. Visit download page Anaconda.Step 2. Download install 64-bit Python 3 distribution suitable operating system.(Windows users run Anaconda Administrator)","code":""},{"path":"hello.html","id":"updating-packages-with-anaconda","chapter":"2 Hello","heading":"Updating packages with Anaconda","text":"","code":""},{"path":"hello.html","id":"using-anaconda-navigator","chapter":"2 Hello","heading":"Using Anaconda-Navigator","text":"","code":""},{"path":"hello.html","id":"without-anaconda","chapter":"2 Hello","heading":"Without Anaconda","text":"like install Python locally machine workshop use:Step 1. Visit download page python.org.Step 2. Download install 64-bit Python 3 version (3.7 fine) suitable operating system.Step 3. Ensure “Add Python PATH” option ticked installer!Step 4. Open favorite editor search “IDLE” computer start typing python commands!","code":""},{"path":"hello.html","id":"installing-packages-with-command-prompt","chapter":"2 Hello","heading":"Installing packages with command prompt","text":"Step 1. Open run.exe pressing windows key ‘R’ keyStep 2. Type cmd.exe click “Ok”Step 3. type python -m pip install PACKAGE_NAME press enter \n(replace PACKAGE_NAME relevant python packages like install.)","code":""},{"path":"hello.html","id":"conventions","chapter":"2 Hello","heading":"2.5 Conventions","text":"Python code shown grey box like :#> used show result (output) code. appear immediately code, like :","code":"print('Code is shown in a box like this')print('Code is shown in a box like this')#> Code is shown in a box like this"},{"path":"hello.html","id":"sec:resources","chapter":"2 Hello","heading":"2.6 Resources","text":"","code":""},{"path":"hello.html","id":"jupyter-notebooks-1","chapter":"2 Hello","heading":"2.6.1 Jupyter Notebooks","text":"Take look site cool tricks optimisations notebooks.","code":""},{"path":"instructions.html","id":"instructions","chapter":"Instructions","heading":"Instructions","text":"like learnt basics Python Colab workshop. way, can use workshop time focus advanced ideas pay attention solving difficulties might encounter. , please work activities given section Python Basics come workshop. take 30 minutes.questions encounter difficulties please reach us Piazza (see ).","code":""},{"path":"instructions.html","id":"start-communicatiing-with-us","chapter":"Instructions","heading":"Start Communicatiing with Us!","text":"Please use Piazza questions.necessary Piazza allows share Python code.","code":""},{"path":"some-python-basics.html","id":"some-python-basics","chapter":"4 Some Python Basics","heading":"4 Some Python Basics","text":"","code":""},{"path":"some-python-basics.html","id":"a-quick-summary","chapter":"4 Some Python Basics","heading":"A Quick Summary","text":"Use # write comments.Python case sensitive.x ‘x’.= ==.careful indentaions start line.Add functionalit using packages.\nE.g. import numpy np\nE.g. import numpy np. indicates ownership.\nE.g. np.sum() means sum() function belonging numpy.\nE.g. np.sum() means sum() function belonging numpy.can store data list numpy arrays.Access elements list using [2:3].Get help using ?.","code":""},{"path":"some-python-basics.html","id":"before-the-workshop","chapter":"4 Some Python Basics","heading":"4.1 Before the Workshop","text":"chapter quickly introduce basic Python.\nneed :Watch 10 minute video section. \ncan access Colab notebook relevant video .\ncan access Colab notebook relevant video .Work exercises shown Colab.\nsolution exercises can also found .\nsolution exercises can also found .","code":""},{"path":"some-python-basics.html","id":"exercises-video-file","chapter":"4 Some Python Basics","heading":"4.2 Exercises & Video File","text":"","code":""},{"path":"some-python-basics.html","id":"basic-exercises","chapter":"4 Some Python Basics","heading":"Basic Exercises","text":"Create new notebook Colab use answer following questions.Predict output following code blocks?\nRun Colab check predictions correct?\nNote: might look internet meaning symbols (/ %)\n   7 / 3 == 7 / 3.0\n'nesia' 'Indonesia'\n(2 + 3) == 5\n 2 + 3 == 5\n \"2\" + \"3\" == \"5\"\n 11 % 3\n 1 < 2 11 >= 9\n 2 > 5 (1 < 2 11 >= 9)\nPredict output following code blocks?\nRun Colab check predictions correct?Note: might look internet meaning symbols (/ %)   7 / 3 == 7 / 3.0'nesia' 'Indonesia'(2 + 3) == 5 2 + 3 == 5 \"2\" + \"3\" == \"5\" 11 % 3 1 < 2 11 >= 9 2 > 5 (1 < 2 11 >= 9)Hello Batman & Robin\nname = 'Batman'\n\nname == 'Batman':\n   print('Hello Batman!')\nelse:\n   print('Hello World!')\nModify code print ‘Hello Hello Hello Hello Batman’ name ‘Batman’.\nModify code respond Robin instead Batman.\nHello Batman & RobinModify code print ‘Hello Hello Hello Hello Batman’ name ‘Batman’.Modify code respond Robin instead Batman.following code bugs; fix !\nx,y = 3,4\n    z = sqrt(x**2 + y**2)\n    print(x,y,z)following code bugs; fix !Use following lists numpy arrays answer following questions\nmy_np_list = np.array([0182, 0269, 0341, 0410, 0523,\n                       0697, 0728, 0856, 0948, 101,\n                       1120, 1272, 1312, 1460, 1564,\n                       1642, 1717, 1816, 1923, 2087])               \nnumber 4th position array?\nlast number array?\nfirst 3 values?\nvalues 4th 10th position? (include numbers 4th 10th positions.)\nvalues list greater 500?\nUse ‘hidden’ numpy functions max(), min(), mean() std() find maximum, minimum, mean standard deviation values numpy array.\nMake numbers less 500 equal zero!\nvalues list greater 500 less 1000?\nUse following lists numpy arrays answer following questionsWhat number 4th position array?last number array?first 3 values?values 4th 10th position? (include numbers 4th 10th positions.)values list greater 500?Use ‘hidden’ numpy functions max(), min(), mean() std() find maximum, minimum, mean standard deviation values numpy array.Make numbers less 500 equal zero!values list greater 500 less 1000?","code":"   7 / 3 == 7 / 3.0'nesia' in 'Indonesia'(2 + 3) == 5 2 + 3 == 5 \"2\" + \"3\" == \"5\" 11 % 3 1 < 2 and 11 >= 9 2 > 5 or (1 < 2 and 11 >= 9)name = 'Batman'\n\nif name == 'Batman':\n   print('Hello Batman!')\nelse:\n   print('Hello World!')x,y = 3,4\n    z = sqrt(x**2 + y**2)\n    print(x,y,z)my_np_list = np.array([0182, 0269, 0341, 0410, 0523,\n                       0697, 0728, 0856, 0948, 101,\n                       1120, 1272, 1312, 1460, 1564,\n                       1642, 1717, 1816, 1923, 2087])               "},{"path":"some-python-basics.html","id":"basic-exercises-solution","chapter":"4 Some Python Basics","heading":"Basic Exercises (Solution)","text":"","code":""},{"path":"some-python-basics.html","id":"colab-file-for-video","chapter":"4 Some Python Basics","heading":"Colab file for Video","text":"","code":""}]
